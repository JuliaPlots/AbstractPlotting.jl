name: Docs
on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master
    tags: '*'
jobs:
  docs:
    name: Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }} - ${{ github.event_name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        version:
          - '1'
        os:
          - ubuntu-18.04
        arch:
          - x64
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - uses: actions/cache@v1
        env:
          cache-name: cache-artifacts
        with:
          path: ~/.julia/artifacts
          key: ${{ runner.os }}-test-${{ env.cache-name }}-${{ hashFiles('**/Project.toml') }}
          restore-keys: |
            ${{ runner.os }}-test-${{ env.cache-name }}-
            ${{ runner.os }}-test-
            ${{ runner.os }}-
      - name: Install binary dependencies
        run: sudo apt-get update && sudo apt-get install -y xorg-dev mesa-utils xvfb libgl1 freeglut3-dev libxrandr-dev libxinerama-dev libxcursor-dev libxi-dev libxext-dev
      - name: Install Julia dependencies
        run: >
          DISPLAY=:0 xvfb-run -s '-screen 0 1024x768x24'
          julia --project=docs -e
          'using Pkg; Pkg.develop(PackageSpec(path=pwd())); 
           Pkg.add(url = "https://github.com/JuliaDocs/Documenter.jl", rev = "master");
           Pkg.add(url = "https://github.com/JuliaPlots/CairoMakie.jl", rev = "master");
           Pkg.add(url = "https://github.com/JuliaPlots/GLMakie.jl", rev = "master");
           Pkg.instantiate()'
      - name: Build and deploy
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DOCUMENTER_KEY: ${{ secrets.DOCUMENTER_KEY }}
        run: >
          DISPLAY=:0 xvfb-run -s '-screen 0 1024x768x24'
          julia --project=docs --color=yes docs/make.jl
