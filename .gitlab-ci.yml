variables:
    CI_IMAGE_TAG: "opengl"
    MODERNGL_DEBUGGING: "true"
    JULIA_DEPOT_PATH: "$CI_PROJECT_DIR/.julia/"
    ABSTRACTPLOTTING_MINIMAL: "false"

stages:
  - test
  - documentation

test:
  stage: test
  image: "juliagpu/julia:v1.3-${CI_IMAGE_TAG}"
  tags:
      - xorg
  cache:
      key: ${CI_JOB_NAME}
      paths:
        - .julia/artifacts
  before_script:
      - apt-get -qq update
      - apt-get install -y cmake xorg-dev mesa-utils # glfw
  script:
    - mkdir -p $JULIA_DEPOT_PATH # Pkg.jl#325
    - julia --project -e 'using Pkg; pkg"build"; Pkg.test(; coverage=true)'
  after_script:
    - julia -e 'using Pkg; Pkg.add("Coverage"); using Coverage; Codecov.submit_local(process_folder(), ".")'
  artifacts:
      when: on_failure
      paths:
      - test/tested_different
      - test/test_recordings
      - Project.toml
      - Manifest.toml
      expire_in: 2 day


docs:
  stage: documentation
  tags:
      - xorg

  image: "juliagpu/julia:v1.3-${CI_IMAGE_TAG}"

  cache:
    key: ${CI_JOB_NAME}
    paths:
      - .julia/

  before_script:
      - apt-get -qq update
      # glfw
      - apt-get install -y cmake xorg-dev mesa-utils p7zip-full ssh

  script:
    - mkdir -p $JULIA_DEPOT_PATH # Pkg.jl#325
    - glxinfo | grep 'version'
    - julia -e 'using InteractiveUtils; versioninfo()'
    - julia --project=docs/ -e 'using Pkg; Pkg.develop(PackageSpec(path=pwd())); Pkg.instantiate()'
    - julia --project=docs/ docs/make.jl

  only:
    - master # trigger docs on master branch changes
    - external_pull_requests # trigger docs on PRs (only internal, not from forks)
